# Generated by Django 4.2.4 on 2025-03-10 17:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('identification_number', models.CharField(blank=True, help_text='Cédula o identificación personal', max_length=20, null=True, unique=True)),
                ('user_type', models.CharField(choices=[('system_admin', 'Administrador del sistema'), ('nurse', 'Enfermero'), ('seller', 'Vendedor'), ('account_admin', 'Administrador contable'), ('client', 'Cliente')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la localidad o sucursal', max_length=100, unique=True)),
                ('address', models.CharField(help_text='Dirección completa de la localidad', max_length=255)),
                ('phone', models.CharField(blank=True, help_text='Teléfono de contacto', max_length=15, null=True)),
                ('email', models.EmailField(blank=True, help_text='Correo electrónico de contacto', max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la localidad está activa')),
            ],
            options={
                'verbose_name': 'Localidad',
                'verbose_name_plural': 'Localidades',
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la especialidad', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
            },
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_region', models.CharField(help_text='Zona o región asignada para ventas', max_length=100)),
                ('employee_id', models.CharField(blank=True, help_text='Identificador de empleado', max_length=50, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Valoración del desempeño', max_digits=3, null=True)),
                ('is_online_worker', models.BooleanField(default=False, help_text='Indica si trabaja en modalidad online')),
                ('location', models.ForeignKey(blank=True, help_text='Localidad asignada para trabajo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sellers', to='users.location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seller_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Vendedor',
                'verbose_name_plural': 'Perfiles de Vendedores',
            },
        ),
        migrations.CreateModel(
            name='NurseProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(help_text='Número de licencia profesional', max_length=50)),
                ('available', models.BooleanField(default=True, help_text='Indica disponibilidad para atender')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Valoración (0.00 a 5.00)', max_digits=3, null=True)),
                ('is_online_worker', models.BooleanField(default=False, help_text='Indica si trabaja en modalidad online')),
                ('location', models.ForeignKey(blank=True, help_text='Localidad asignada para trabajo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nurses', to='users.location')),
                ('specialties', models.ManyToManyField(blank=True, help_text='Especialidades en enfermería', to='users.specialty')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nurse_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Enfermero',
                'verbose_name_plural': 'Perfiles de Enfermeros',
            },
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='Dirección completa', max_length=255)),
                ('phone_number', models.CharField(blank=True, help_text='Teléfono de contacto', max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, help_text='Fecha de nacimiento', null=True)),
                ('medical_insurance', models.CharField(choices=[('iess', 'IESS'), ('private', 'Seguro Privado'), ('none', 'Ninguno')], default='none', help_text='Tipo de seguro médico', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Cliente',
                'verbose_name_plural': 'Perfiles de Clientes',
            },
        ),
        migrations.CreateModel(
            name='AccountAdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(help_text='Departamento o área de trabajo', max_length=100)),
                ('employee_id', models.CharField(help_text='Identificador único de empleado', max_length=50, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account_admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Administrador Contable',
                'verbose_name_plural': 'Perfiles de Administradores Contables',
            },
        ),
    ]
